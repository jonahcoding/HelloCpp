
/*
---------------------------------------------

---------------------------------------------
*/


//【引用的基本语法】
int a =10;
int& ref = a;
//编译器的实现方式是：
int * const ref = &a;//ref是常指针，必须初始化

ref = 20;
//编译器检测到ref为引用，即自动转换为：ref = 20;（解引用）

//注意事项：

int& func()
{
	int a = 10;
	return a;
}

// 不能引用局部变量。
// 函数返回值为引用，可做左值参与运算。



// 【指针的引用】
// 简化指针。
// 用通缉指针的引用给同级指针分配空间。

// 【常量引用】
const int &ref = 10;
//编译器实现：
int temp = 10;
const int &ref = temp;
//（创建了临时变量——临时空间ref）

int * p = (int * )&ref;
* p = 1000;//（ref此时为1000）

// 使用场景：
// 	修饰函数形参，防止误操作。